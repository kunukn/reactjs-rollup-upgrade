/** @license React vundefined
 * create-subscription.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

"use strict";
Object.defineProperty(exports, "__esModule", { value: !0 });
var React = require("react");
function ReactErrorProd(error) {
  for (
    var code = error.message,
      url = "https://reactjs.org/docs/error-decoder.html?invariant=" + code,
      i = 1;
    i < arguments.length;
    i++
  )
    url += "&args[]=" + encodeURIComponent(arguments[i]);
  error.message =
    "Minified React error #" +
    code +
    "; visit " +
    url +
    " for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ";
  return error;
}
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}
exports.createSubscription = function(config) {
  var getCurrentValue = config.getCurrentValue,
    _subscribe = config.subscribe;
  return (function(_React$Component) {
    function Subscription() {
      var _this = arguments.length;
      for (var args = Array(_this), _key = 0; _key < _this; _key++)
        args[_key] = arguments[_key];
      _this =
        _React$Component.call.apply(_React$Component, [this].concat(args)) ||
        this;
      _this.state = {
        source: _this.props.source,
        value:
          null != _this.props.source
            ? getCurrentValue(_this.props.source)
            : void 0
      };
      _this._hasUnmounted = !1;
      _this._unsubscribe = null;
      return _this;
    }
    _inheritsLoose(Subscription, _React$Component);
    Subscription.getDerivedStateFromProps = function(nextProps, prevState) {
      return nextProps.source !== prevState.source
        ? {
            source: nextProps.source,
            value:
              null != nextProps.source
                ? getCurrentValue(nextProps.source)
                : void 0
          }
        : null;
    };
    var _proto = Subscription.prototype;
    _proto.componentDidMount = function() {
      this.subscribe();
    };
    _proto.componentDidUpdate = function(prevProps, prevState) {
      this.state.source !== prevState.source &&
        (this.unsubscribe(), this.subscribe());
    };
    _proto.componentWillUnmount = function() {
      this.unsubscribe();
      this._hasUnmounted = !0;
    };
    _proto.render = function() {
      return this.props.children(this.state.value);
    };
    _proto.subscribe = function() {
      var _this2 = this,
        source = this.state.source;
      if (null != source) {
        var unsubscribe = _subscribe(source, function(value) {
          _this2._hasUnmounted ||
            _this2.setState(function(state) {
              return value === state.value || source !== state.source
                ? null
                : { value: value };
            });
        });
        if ("function" !== typeof unsubscribe) throw ReactErrorProd(Error(266));
        this._unsubscribe = unsubscribe;
        unsubscribe = getCurrentValue(this.props.source);
        unsubscribe !== this.state.value &&
          this.setState({ value: unsubscribe });
      }
    };
    _proto.unsubscribe = function() {
      "function" === typeof this._unsubscribe && this._unsubscribe();
      this._unsubscribe = null;
    };
    return Subscription;
  })(React.Component);
};
