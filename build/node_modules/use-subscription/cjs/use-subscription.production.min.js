/** @license React vundefined
 * use-subscription.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

"use strict";
Object.defineProperty(exports, "__esModule", { value: !0 });
var react = require("react"),
  getOwnPropertySymbols = Object.getOwnPropertySymbols,
  hasOwnProperty = Object.prototype.hasOwnProperty,
  propIsEnumerable = Object.prototype.propertyIsEnumerable,
  objectAssign = (function() {
    try {
      if (!Object.assign) return !1;
      var test1 = new String("abc");
      test1[5] = "de";
      if ("5" === Object.getOwnPropertyNames(test1)[0]) return !1;
      var test2 = {};
      for (test1 = 0; 10 > test1; test1++)
        test2["_" + String.fromCharCode(test1)] = test1;
      if (
        "0123456789" !==
        Object.getOwnPropertyNames(test2)
          .map(function(n) {
            return test2[n];
          })
          .join("")
      )
        return !1;
      var test3 = {};
      "abcdefghijklmnopqrst".split("").forEach(function(letter) {
        test3[letter] = letter;
      });
      return "abcdefghijklmnopqrst" !==
        Object.keys(Object.assign({}, test3)).join("")
        ? !1
        : !0;
    } catch (err) {
      return !1;
    }
  })()
    ? Object.assign
    : function(target, source) {
        if (null === target || void 0 === target)
          throw new TypeError(
            "Object.assign cannot be called with null or undefined"
          );
        var to = Object(target);
        for (var symbols, s = 1; s < arguments.length; s++) {
          var from = Object(arguments[s]);
          for (var key in from)
            hasOwnProperty.call(from, key) && (to[key] = from[key]);
          if (getOwnPropertySymbols) {
            symbols = getOwnPropertySymbols(from);
            for (var i = 0; i < symbols.length; i++)
              propIsEnumerable.call(from, symbols[i]) &&
                (to[symbols[i]] = from[symbols[i]]);
          }
        }
        return to;
      };
exports.useSubscription = function(_ref) {
  var getCurrentValue = _ref.getCurrentValue,
    subscribe = _ref.subscribe,
    _useState = react.useState(function() {
      return {
        getCurrentValue: getCurrentValue,
        subscribe: subscribe,
        value: getCurrentValue()
      };
    });
  _ref = _useState[0];
  var setState = _useState[1];
  _useState = _ref.value;
  if (_ref.getCurrentValue !== getCurrentValue || _ref.subscribe !== subscribe)
    (_useState = getCurrentValue()),
      setState({
        getCurrentValue: getCurrentValue,
        subscribe: subscribe,
        value: _useState
      });
  react.useDebugValue(_useState);
  react.useEffect(
    function() {
      function checkForUpdates() {
        didUnsubscribe ||
          setState(function(prevState) {
            if (
              prevState.getCurrentValue !== getCurrentValue ||
              prevState.subscribe !== subscribe
            )
              return prevState;
            var value = getCurrentValue();
            return prevState.value === value
              ? prevState
              : objectAssign({}, prevState, { value: value });
          });
      }
      var didUnsubscribe = !1,
        unsubscribe = subscribe(checkForUpdates);
      checkForUpdates();
      return function() {
        didUnsubscribe = !0;
        unsubscribe();
      };
    },
    [getCurrentValue, subscribe]
  );
  return _useState;
};
